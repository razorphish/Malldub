#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.Runtime.Serialization;
using System.Xml.Serialization;

namespace Malldub.Data
{
    [EdmEntityTypeAttribute(NamespaceName="Malldub.Data", Name="FundNote")]
    [DataContractAttribute(IsReference=true)]
    [ScaffoldTable(true)]
    [Serializable()]
    public partial class FundNote : EntityObject
    {
        #region Factory Methods

        /// <summary>
        /// Create a new FundNote object.
        /// </summary>
        /// <param name="identification">Initial value of the Identification property.</param>
        /// <param name="fundUserId">Initial value of the FundUserId property.</param>
        /// <param name="fundId">Initial value of the FundId property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        public static FundNote CreateFundNote(global::System.Int32 identification, global::System.String fundUserId, global::System.Int32 fundId, global::System.String typeId)
        {
            FundNote fundNote = new FundNote();
            fundNote.Identification = identification;
            fundNote.FundUserId = fundUserId;
            fundNote.FundId = fundId;
            fundNote.TypeId = typeId;

            return fundNote;
        }

        #endregion

        #region Primitive Properties

        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Identification
        {
            get
            {
                return _identification;
            }
            set
            {
                if (_identification != value)
                {
                    OnIdentificationChanging(value);
                    ReportPropertyChanging("Identification");
                    _identification = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Identification");
                    OnIdentificationChanged();
                }
            }
        }

        private global::System.Int32 _identification;
        partial void OnIdentificationChanging(global::System.Int32 value);
        partial void OnIdentificationChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundUserId
        {
            get
            {
                return _fundUserId;
            }
            set
            {
                if (_fundUserId != value)
                {
                    OnFundUserIdChanging(value);
                    ReportPropertyChanging("FundUserId");
                    _fundUserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FundUserId");
                    OnFundUserIdChanged();
                }
            }
        }

        private global::System.String _fundUserId;
        partial void OnFundUserIdChanging(global::System.String value);
        partial void OnFundUserIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundId
        {
            get
            {
                return _fundId;
            }
            set
            {
                if (_fundId != value)
                {
                    OnFundIdChanging(value);
                    ReportPropertyChanging("FundId");
                    _fundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundId");
                    OnFundIdChanged();
                }
            }
        }

        private global::System.Int32 _fundId;
        partial void OnFundIdChanging(global::System.Int32 value);
        partial void OnFundIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Int32? RespondNoteId
        {
            get
            {
                return _respondNoteId;
            }
            set
            {
                if (_respondNoteId != value)
                {
                    OnRespondNoteIdChanging(value);
                    ReportPropertyChanging("RespondNoteId");
                    _respondNoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RespondNoteId");
                    OnRespondNoteIdChanged();
                }
            }
        }

        private global::System.Int32? _respondNoteId;
        partial void OnRespondNoteIdChanging(global::System.Int32? value);
        partial void OnRespondNoteIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeId
        {
            get
            {
                return _typeId;
            }
            set
            {
                if (_typeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _typeId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }

        private global::System.String _typeId;
        partial void OnTypeIdChanging(global::System.String value);
        partial void OnTypeIdChanged();

        #endregion

        #region Navigation Properties

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundNote_AspNetUsers", "AspNetUser")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_FundNote_AspNetUsers", "AspNetUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_FundNote_AspNetUsers", "AspNetUser").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_FundNote_AspNetUsers", "AspNetUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("Malldub.Data.FK_FundNote_AspNetUsers", "AspNetUser", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundNote_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("Malldub.Data.FK_FundNote_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("Malldub.Data.FK_FundNote_Fund", "Fund").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("Malldub.Data.FK_FundNote_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("Malldub.Data.FK_FundNote_Fund", "Fund", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundNote_Note", "Note")]
        public Note Note
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("Malldub.Data.FK_FundNote_Note", "Note").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("Malldub.Data.FK_FundNote_Note", "Note").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Note> NoteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Note>("Malldub.Data.FK_FundNote_Note", "Note");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Note>("Malldub.Data.FK_FundNote_Note", "Note", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundNote_FundNoteType", "FundNoteType")]
        public FundNoteType FundNoteType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundNoteType>("Malldub.Data.FK_FundNote_FundNoteType", "FundNoteType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundNoteType>("Malldub.Data.FK_FundNote_FundNoteType", "FundNoteType").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundNoteType> FundNoteTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundNoteType>("Malldub.Data.FK_FundNote_FundNoteType", "FundNoteType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundNoteType>("Malldub.Data.FK_FundNote_FundNoteType", "FundNoteType", value);
                }
            }
        }

        #endregion
    }
}
#pragma warning restore 1591