#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.Runtime.Serialization;
using System.Xml.Serialization;

namespace Malldub.Data
{
    [EdmEntityTypeAttribute(NamespaceName="Malldub.Data", Name="FundShare")]
    [DataContractAttribute(IsReference=true)]
    [ScaffoldTable(true)]
    [Serializable()]
    public partial class FundShare : EntityObject
    {
        #region Factory Methods

        /// <summary>
        /// Create a new FundShare object.
        /// </summary>
        /// <param name="identification">Initial value of the Identification property.</param>
        /// <param name="fundId">Initial value of the FundId property.</param>
        /// <param name="shareTypeId">Initial value of the ShareTypeId property.</param>
        public static FundShare CreateFundShare(global::System.Int32 identification, global::System.Int32 fundId, global::System.String shareTypeId)
        {
            FundShare fundShare = new FundShare();
            fundShare.Identification = identification;
            fundShare.FundId = fundId;
            fundShare.ShareTypeId = shareTypeId;

            return fundShare;
        }

        #endregion

        #region Primitive Properties

        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Identification
        {
            get
            {
                return _identification;
            }
            set
            {
                if (_identification != value)
                {
                    OnIdentificationChanging(value);
                    ReportPropertyChanging("Identification");
                    _identification = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Identification");
                    OnIdentificationChanged();
                }
            }
        }

        private global::System.Int32 _identification;
        partial void OnIdentificationChanging(global::System.Int32 value);
        partial void OnIdentificationChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundId
        {
            get
            {
                return _fundId;
            }
            set
            {
                if (_fundId != value)
                {
                    OnFundIdChanging(value);
                    ReportPropertyChanging("FundId");
                    _fundId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundId");
                    OnFundIdChanged();
                }
            }
        }

        private global::System.Int32 _fundId;
        partial void OnFundIdChanging(global::System.Int32 value);
        partial void OnFundIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _userId = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }

        private global::System.String _userId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SocialId
        {
            get
            {
                return _socialId;
            }
            set
            {
                if (_socialId != value)
                {
                    OnSocialIdChanging(value);
                    ReportPropertyChanging("SocialId");
                    _socialId = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("SocialId");
                    OnSocialIdChanged();
                }
            }
        }

        private global::System.String _socialId;
        partial void OnSocialIdChanging(global::System.String value);
        partial void OnSocialIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _firstName;
            }
            set
            {
                if (_firstName != value)
                {
                    OnFirstNameChanging(value);
                    ReportPropertyChanging("FirstName");
                    _firstName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("FirstName");
                    OnFirstNameChanged();
                }
            }
        }

        private global::System.String _firstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                if (_lastName != value)
                {
                    OnLastNameChanging(value);
                    ReportPropertyChanging("LastName");
                    _lastName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LastName");
                    OnLastNameChanged();
                }
            }
        }

        private global::System.String _lastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _email;
            }
            set
            {
                if (_email != value)
                {
                    OnEmailChanging(value);
                    ReportPropertyChanging("Email");
                    _email = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }

        private global::System.String _email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Recipients
        {
            get
            {
                return _recipients;
            }
            set
            {
                if (_recipients != value)
                {
                    OnRecipientsChanging(value);
                    ReportPropertyChanging("Recipients");
                    _recipients = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Recipients");
                    OnRecipientsChanged();
                }
            }
        }

        private global::System.String _recipients;
        partial void OnRecipientsChanging(global::System.String value);
        partial void OnRecipientsChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShareTypeId
        {
            get
            {
                return _shareTypeId;
            }
            set
            {
                if (_shareTypeId != value)
                {
                    OnShareTypeIdChanging(value);
                    ReportPropertyChanging("ShareTypeId");
                    _shareTypeId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ShareTypeId");
                    OnShareTypeIdChanged();
                }
            }
        }

        private global::System.String _shareTypeId;
        partial void OnShareTypeIdChanging(global::System.String value);
        partial void OnShareTypeIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.DateTime? DateEntered
        {
            get
            {
                return _dateEntered;
            }
            set
            {
                if (_dateEntered != value)
                {
                    OnDateEnteredChanging(value);
                    ReportPropertyChanging("DateEntered");
                    _dateEntered = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateEntered");
                    OnDateEnteredChanged();
                }
            }
        }

        private global::System.DateTime? _dateEntered;
        partial void OnDateEnteredChanging(global::System.DateTime? value);
        partial void OnDateEnteredChanged();

        #endregion

        #region Navigation Properties

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundShare_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("Malldub.Data.FK_FundShare_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("Malldub.Data.FK_FundShare_Fund", "Fund").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("Malldub.Data.FK_FundShare_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("Malldub.Data.FK_FundShare_Fund", "Fund", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundShare_FundShareType", "FundShareType")]
        public FundShareType FundShareType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundShareType>("Malldub.Data.FK_FundShare_FundShareType", "FundShareType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundShareType>("Malldub.Data.FK_FundShare_FundShareType", "FundShareType").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundShareType> FundShareTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundShareType>("Malldub.Data.FK_FundShare_FundShareType", "FundShareType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundShareType>("Malldub.Data.FK_FundShare_FundShareType", "FundShareType", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundShare_User", "AspNetUser")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_FundShare_User", "AspNetUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_FundShare_User", "AspNetUser").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_FundShare_User", "AspNetUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("Malldub.Data.FK_FundShare_User", "AspNetUser", value);
                }
            }
        }

        #endregion
    }
}
#pragma warning restore 1591