#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.Runtime.Serialization;
using System.Xml.Serialization;

namespace Malldub.Data
{
    [EdmEntityTypeAttribute(NamespaceName="Malldub.Data", Name="UserUpload")]
    [DataContractAttribute(IsReference=true)]
    [ScaffoldTable(true)]
    [Serializable()]
    public partial class UserUpload : EntityObject
    {
        #region Factory Methods

        /// <summary>
        /// Create a new UserUpload object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="uploadId">Initial value of the UploadId property.</param>
        public static UserUpload CreateUserUpload(global::System.String userId, global::System.Int32 uploadId)
        {
            UserUpload userUpload = new UserUpload();
            userUpload.UserId = userId;
            userUpload.UploadId = uploadId;

            return userUpload;
        }

        #endregion

        #region Primitive Properties

        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _userId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }

        private global::System.String _userId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UploadId
        {
            get
            {
                return _uploadId;
            }
            set
            {
                if (_uploadId != value)
                {
                    OnUploadIdChanging(value);
                    ReportPropertyChanging("UploadId");
                    _uploadId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UploadId");
                    OnUploadIdChanged();
                }
            }
        }

        private global::System.Int32 _uploadId;
        partial void OnUploadIdChanging(global::System.Int32 value);
        partial void OnUploadIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Boolean? IsDefault
        {
            get
            {
                return _isDefault;
            }
            set
            {
                if (_isDefault != value)
                {
                    OnIsDefaultChanging(value);
                    ReportPropertyChanging("IsDefault");
                    _isDefault = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsDefault");
                    OnIsDefaultChanged();
                }
            }
        }

        private global::System.Boolean? _isDefault;
        partial void OnIsDefaultChanging(global::System.Boolean? value);
        partial void OnIsDefaultChanged();

        #endregion

        #region Navigation Properties

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_UserUpload_Upload", "Upload")]
        public Upload Upload
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Upload>("Malldub.Data.FK_UserUpload_Upload", "Upload").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Upload>("Malldub.Data.FK_UserUpload_Upload", "Upload").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Upload> UploadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Upload>("Malldub.Data.FK_UserUpload_Upload", "Upload");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Upload>("Malldub.Data.FK_UserUpload_Upload", "Upload", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_UserUpload_Users", "AspNetUser")]
        public AspNetUser AspNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_UserUpload_Users", "AspNetUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_UserUpload_Users", "AspNetUser").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AspNetUser> AspNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AspNetUser>("Malldub.Data.FK_UserUpload_Users", "AspNetUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AspNetUser>("Malldub.Data.FK_UserUpload_Users", "AspNetUser", value);
                }
            }
        }

        #endregion
    }
}
#pragma warning restore 1591