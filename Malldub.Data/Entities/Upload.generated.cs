#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.Runtime.Serialization;
using System.Xml.Serialization;

namespace Malldub.Data
{
    [EdmEntityTypeAttribute(NamespaceName="Malldub.Data", Name="Upload")]
    [DataContractAttribute(IsReference=true)]
    [ScaffoldTable(true)]
    [Serializable()]
    public partial class Upload : EntityObject
    {
        #region Factory Methods

        /// <summary>
        /// Create a new Upload object.
        /// </summary>
        /// <param name="identification">Initial value of the Identification property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isPrivate">Initial value of the IsPrivate property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="originalFileName">Initial value of the OriginalFileName property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        public static Upload CreateUpload(global::System.Int32 identification, global::System.String description, global::System.Boolean isPrivate, global::System.String categoryId, global::System.String name, global::System.String originalFileName, global::System.String location)
        {
            Upload upload = new Upload();
            upload.Identification = identification;
            upload.Description = description;
            upload.IsPrivate = isPrivate;
            upload.CategoryId = categoryId;
            upload.Name = name;
            upload.OriginalFileName = originalFileName;
            upload.Location = location;

            return upload;
        }

        #endregion

        #region Primitive Properties

        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Identification
        {
            get
            {
                return _identification;
            }
            set
            {
                if (_identification != value)
                {
                    OnIdentificationChanging(value);
                    ReportPropertyChanging("Identification");
                    _identification = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Identification");
                    OnIdentificationChanged();
                }
            }
        }

        private global::System.Int32 _identification;
        partial void OnIdentificationChanging(global::System.Int32 value);
        partial void OnIdentificationChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _description;
            }
            set
            {
                if (_description != value)
                {
                    OnDescriptionChanging(value);
                    ReportPropertyChanging("Description");
                    _description = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }

        private global::System.String _description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrivate
        {
            get
            {
                return _isPrivate;
            }
            set
            {
                if (_isPrivate != value)
                {
                    OnIsPrivateChanging(value);
                    ReportPropertyChanging("IsPrivate");
                    _isPrivate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsPrivate");
                    OnIsPrivateChanged();
                }
            }
        }

        private global::System.Boolean _isPrivate;
        partial void OnIsPrivateChanging(global::System.Boolean value);
        partial void OnIsPrivateChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryId
        {
            get
            {
                return _categoryId;
            }
            set
            {
                if (_categoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _categoryId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }

        private global::System.String _categoryId;
        partial void OnCategoryIdChanging(global::System.String value);
        partial void OnCategoryIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }

        private global::System.String _name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalFileName
        {
            get
            {
                return _originalFileName;
            }
            set
            {
                if (_originalFileName != value)
                {
                    OnOriginalFileNameChanging(value);
                    ReportPropertyChanging("OriginalFileName");
                    _originalFileName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("OriginalFileName");
                    OnOriginalFileNameChanged();
                }
            }
        }

        private global::System.String _originalFileName;
        partial void OnOriginalFileNameChanging(global::System.String value);
        partial void OnOriginalFileNameChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _location;
            }
            set
            {
                if (_location != value)
                {
                    OnLocationChanging(value);
                    ReportPropertyChanging("Location");
                    _location = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Location");
                    OnLocationChanged();
                }
            }
        }

        private global::System.String _location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeLocation
        {
            get
            {
                return _relativeLocation;
            }
            set
            {
                if (_relativeLocation != value)
                {
                    OnRelativeLocationChanging(value);
                    ReportPropertyChanging("RelativeLocation");
                    _relativeLocation = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("RelativeLocation");
                    OnRelativeLocationChanged();
                }
            }
        }

        private global::System.String _relativeLocation;
        partial void OnRelativeLocationChanging(global::System.String value);
        partial void OnRelativeLocationChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _extension;
            }
            set
            {
                if (_extension != value)
                {
                    OnExtensionChanging(value);
                    ReportPropertyChanging("Extension");
                    _extension = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("Extension");
                    OnExtensionChanged();
                }
            }
        }

        private global::System.String _extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Int64? ContentLength
        {
            get
            {
                return _contentLength;
            }
            set
            {
                if (_contentLength != value)
                {
                    OnContentLengthChanging(value);
                    ReportPropertyChanging("ContentLength");
                    _contentLength = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContentLength");
                    OnContentLengthChanged();
                }
            }
        }

        private global::System.Int64? _contentLength;
        partial void OnContentLengthChanging(global::System.Int64? value);
        partial void OnContentLengthChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _contentType;
            }
            set
            {
                if (_contentType != value)
                {
                    OnContentTypeChanging(value);
                    ReportPropertyChanging("ContentType");
                    _contentType = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ContentType");
                    OnContentTypeChanged();
                }
            }
        }

        private global::System.String _contentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationHttp
        {
            get
            {
                return _locationHttp;
            }
            set
            {
                if (_locationHttp != value)
                {
                    OnLocationHttpChanging(value);
                    ReportPropertyChanging("LocationHttp");
                    _locationHttp = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("LocationHttp");
                    OnLocationHttpChanged();
                }
            }
        }

        private global::System.String _locationHttp;
        partial void OnLocationHttpChanging(global::System.String value);
        partial void OnLocationHttpChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContainerName
        {
            get
            {
                return _containerName;
            }
            set
            {
                if (_containerName != value)
                {
                    OnContainerNameChanging(value);
                    ReportPropertyChanging("ContainerName");
                    _containerName = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("ContainerName");
                    OnContainerNameChanged();
                }
            }
        }

        private global::System.String _containerName;
        partial void OnContainerNameChanging(global::System.String value);
        partial void OnContainerNameChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.DateTime? DateEntered
        {
            get
            {
                return _dateEntered;
            }
            set
            {
                if (_dateEntered != value)
                {
                    OnDateEnteredChanging(value);
                    ReportPropertyChanging("DateEntered");
                    _dateEntered = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateEntered");
                    OnDateEnteredChanged();
                }
            }
        }

        private global::System.DateTime? _dateEntered;
        partial void OnDateEnteredChanging(global::System.DateTime? value);
        partial void OnDateEnteredChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.DateTime? DateUpdated
        {
            get
            {
                return _dateUpdated;
            }
            set
            {
                if (_dateUpdated != value)
                {
                    OnDateUpdatedChanging(value);
                    ReportPropertyChanging("DateUpdated");
                    _dateUpdated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateUpdated");
                    OnDateUpdatedChanged();
                }
            }
        }

        private global::System.DateTime? _dateUpdated;
        partial void OnDateUpdatedChanging(global::System.DateTime? value);
        partial void OnDateUpdatedChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeId
        {
            get
            {
                return _typeId;
            }
            set
            {
                if (_typeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _typeId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }

        private global::System.String _typeId;
        partial void OnTypeIdChanging(global::System.String value);
        partial void OnTypeIdChanged();

        #endregion

        #region Navigation Properties

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_Upload_UploadCategory", "UploadCategory")]
        public UploadCategory UploadCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadCategory>("Malldub.Data.FK_Upload_UploadCategory", "UploadCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadCategory>("Malldub.Data.FK_Upload_UploadCategory", "UploadCategory").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadCategory> UploadCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadCategory>("Malldub.Data.FK_Upload_UploadCategory", "UploadCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadCategory>("Malldub.Data.FK_Upload_UploadCategory", "UploadCategory", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_AspNetUsers_Upload", "AspNetUser")]
        public EntityCollection<AspNetUser> AspNetUserList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AspNetUser>("Malldub.Data.FK_AspNetUsers_Upload", "AspNetUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AspNetUser>("Malldub.Data.FK_AspNetUsers_Upload", "AspNetUser", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_ItemUpload_Upload", "ItemUpload")]
        public EntityCollection<ItemUpload> ItemUploadList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemUpload>("Malldub.Data.FK_ItemUpload_Upload", "ItemUpload");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemUpload>("Malldub.Data.FK_ItemUpload_Upload", "ItemUpload", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_UserUpload_Upload", "UserUpload")]
        public EntityCollection<UserUpload> UserUploadList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserUpload>("Malldub.Data.FK_UserUpload_Upload", "UserUpload");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserUpload>("Malldub.Data.FK_UserUpload_Upload", "UserUpload", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_Upload_UploadType", "UploadType")]
        public UploadType UploadType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadType>("Malldub.Data.FK_Upload_UploadType", "UploadType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadType>("Malldub.Data.FK_Upload_UploadType", "UploadType").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UploadType> UploadTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UploadType>("Malldub.Data.FK_Upload_UploadType", "UploadType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UploadType>("Malldub.Data.FK_Upload_UploadType", "UploadType", value);
                }
            }
        }

        #endregion
    }
}
#pragma warning restore 1591