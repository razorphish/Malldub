#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.Runtime.Serialization;
using System.Xml.Serialization;

namespace Malldub.Data
{
    [EdmEntityTypeAttribute(NamespaceName="Malldub.Data", Name="Fund")]
    [DataContractAttribute(IsReference=true)]
    [ScaffoldTable(true)]
    [Serializable()]
    public partial class Fund : EntityObject
    {
        #region Factory Methods

        /// <summary>
        /// Create a new Fund object.
        /// </summary>
        /// <param name="identification">Initial value of the Identification property.</param>
        /// <param name="goalAmount">Initial value of the GoalAmount property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="isPrivate">Initial value of the IsPrivate property.</param>
        /// <param name="enableSocialSharing">Initial value of the EnableSocialSharing property.</param>
        /// <param name="pageColor">Initial value of the PageColor property.</param>
        public static Fund CreateFund(global::System.Int32 identification, global::System.Decimal goalAmount, global::System.String typeId, global::System.Boolean isPrivate, global::System.Boolean enableSocialSharing, global::System.String pageColor)
        {
            Fund fund = new Fund();
            fund.Identification = identification;
            fund.GoalAmount = goalAmount;
            fund.TypeId = typeId;
            fund.IsPrivate = isPrivate;
            fund.EnableSocialSharing = enableSocialSharing;
            fund.PageColor = pageColor;

            return fund;
        }

        #endregion

        #region Primitive Properties

        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Identification
        {
            get
            {
                return _identification;
            }
            set
            {
                if (_identification != value)
                {
                    OnIdentificationChanging(value);
                    ReportPropertyChanging("Identification");
                    _identification = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Identification");
                    OnIdentificationChanged();
                }
            }
        }

        private global::System.Int32 _identification;
        partial void OnIdentificationChanging(global::System.Int32 value);
        partial void OnIdentificationChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal GoalAmount
        {
            get
            {
                return _goalAmount;
            }
            set
            {
                if (_goalAmount != value)
                {
                    OnGoalAmountChanging(value);
                    ReportPropertyChanging("GoalAmount");
                    _goalAmount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GoalAmount");
                    OnGoalAmountChanged();
                }
            }
        }

        private global::System.Decimal _goalAmount;
        partial void OnGoalAmountChanging(global::System.Decimal value);
        partial void OnGoalAmountChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeId
        {
            get
            {
                return _typeId;
            }
            set
            {
                if (_typeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _typeId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }

        private global::System.String _typeId;
        partial void OnTypeIdChanging(global::System.String value);
        partial void OnTypeIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrivate
        {
            get
            {
                return _isPrivate;
            }
            set
            {
                if (_isPrivate != value)
                {
                    OnIsPrivateChanging(value);
                    ReportPropertyChanging("IsPrivate");
                    _isPrivate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsPrivate");
                    OnIsPrivateChanged();
                }
            }
        }

        private global::System.Boolean _isPrivate;
        partial void OnIsPrivateChanging(global::System.Boolean value);
        partial void OnIsPrivateChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnableSocialSharing
        {
            get
            {
                return _enableSocialSharing;
            }
            set
            {
                if (_enableSocialSharing != value)
                {
                    OnEnableSocialSharingChanging(value);
                    ReportPropertyChanging("EnableSocialSharing");
                    _enableSocialSharing = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EnableSocialSharing");
                    OnEnableSocialSharingChanged();
                }
            }
        }

        private global::System.Boolean _enableSocialSharing;
        partial void OnEnableSocialSharingChanging(global::System.Boolean value);
        partial void OnEnableSocialSharingChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PageColor
        {
            get
            {
                return _pageColor;
            }
            set
            {
                if (_pageColor != value)
                {
                    OnPageColorChanging(value);
                    ReportPropertyChanging("PageColor");
                    _pageColor = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PageColor");
                    OnPageColorChanged();
                }
            }
        }

        private global::System.String _pageColor;
        partial void OnPageColorChanging(global::System.String value);
        partial void OnPageColorChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryId
        {
            get
            {
                return _categoryId;
            }
            set
            {
                if (_categoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _categoryId = StructuralObject.SetValidValue(value, true);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }

        private global::System.String _categoryId;
        partial void OnCategoryIdChanging(global::System.String value);
        partial void OnCategoryIdChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PageSkin
        {
            get
            {
                return _pageSkin;
            }
            set
            {
                if (_pageSkin != value)
                {
                    OnPageSkinChanging(value);
                    ReportPropertyChanging("PageSkin");
                    _pageSkin = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PageSkin");
                    OnPageSkinChanged();
                }
            }
        }

        private global::System.String _pageSkin;
        partial void OnPageSkinChanging(global::System.String value);
        partial void OnPageSkinChanged();

        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PageLayout
        {
            get
            {
                return _pageLayout;
            }
            set
            {
                if (_pageLayout != value)
                {
                    OnPageLayoutChanging(value);
                    ReportPropertyChanging("PageLayout");
                    _pageLayout = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PageLayout");
                    OnPageLayoutChanged();
                }
            }
        }

        private global::System.String _pageLayout;
        partial void OnPageLayoutChanging(global::System.String value);
        partial void OnPageLayoutChanged();

        #endregion

        #region Navigation Properties

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_Fund_FundType", "FundType")]
        public FundType FundType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundType>("Malldub.Data.FK_Fund_FundType", "FundType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundType>("Malldub.Data.FK_Fund_FundType", "FundType").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundType> FundTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundType>("Malldub.Data.FK_Fund_FundType", "FundType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundType>("Malldub.Data.FK_Fund_FundType", "FundType", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_Fund_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Malldub.Data.FK_Fund_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Malldub.Data.FK_Fund_Item", "Item").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("Malldub.Data.FK_Fund_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("Malldub.Data.FK_Fund_Item", "Item", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_Donation_Fund", "Donation")]
        public EntityCollection<Donation> DonationList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Donation>("Malldub.Data.FK_Donation_Fund", "Donation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Donation>("Malldub.Data.FK_Donation_Fund", "Donation", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundUpdate_Fund", "FundUpdate")]
        public EntityCollection<FundUpdate> FundUpdateList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundUpdate>("Malldub.Data.FK_FundUpdate_Fund", "FundUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundUpdate>("Malldub.Data.FK_FundUpdate_Fund", "FundUpdate", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundUser_Fund", "FundUser")]
        public EntityCollection<FundUser> FundUserList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundUser>("Malldub.Data.FK_FundUser_Fund", "FundUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundUser>("Malldub.Data.FK_FundUser_Fund", "FundUser", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundShare_Fund", "FundShare")]
        public EntityCollection<FundShare> FundShareList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundShare>("Malldub.Data.FK_FundShare_Fund", "FundShare");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundShare>("Malldub.Data.FK_FundShare_Fund", "FundShare", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundNote_Fund", "FundNote")]
        public EntityCollection<FundNote> FundNoteList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundNote>("Malldub.Data.FK_FundNote_Fund", "FundNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundNote>("Malldub.Data.FK_FundNote_Fund", "FundNote", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundSettings_Fund", "FundSetting")]
        public FundSetting FundSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundSetting>("Malldub.Data.FK_FundSettings_Fund", "FundSetting").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundSetting>("Malldub.Data.FK_FundSettings_Fund", "FundSetting").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundSetting> FundSettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundSetting>("Malldub.Data.FK_FundSettings_Fund", "FundSetting");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundSetting>("Malldub.Data.FK_FundSettings_Fund", "FundSetting", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundActivity_Fund", "FundActivity")]
        public EntityCollection<FundActivity> FundActivityList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundActivity>("Malldub.Data.FK_FundActivity_Fund", "FundActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundActivity>("Malldub.Data.FK_FundActivity_Fund", "FundActivity", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_Fund_FundCategory", "FundCategory")]
        public FundCategory FundCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundCategory>("Malldub.Data.FK_Fund_FundCategory", "FundCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundCategory>("Malldub.Data.FK_Fund_FundCategory", "FundCategory").Value = value;
            }
        }

        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundCategory> FundCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundCategory>("Malldub.Data.FK_Fund_FundCategory", "FundCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundCategory>("Malldub.Data.FK_Fund_FundCategory", "FundCategory", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundTeam_Fund", "FundTeam")]
        public EntityCollection<FundTeam> FundTeamList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundTeam>("Malldub.Data.FK_FundTeam_Fund", "FundTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundTeam>("Malldub.Data.FK_FundTeam_Fund", "FundTeam", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundTeam_TeamFund", "FundTeam")]
        public EntityCollection<FundTeam> TeamFundFundTeamList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundTeam>("Malldub.Data.FK_FundTeam_TeamFund", "FundTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundTeam>("Malldub.Data.FK_FundTeam_TeamFund", "FundTeam", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundTeamMember_Fund", "FundTeamMember")]
        public EntityCollection<FundTeamMember> FundTeamMemberList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundTeamMember>("Malldub.Data.FK_FundTeamMember_Fund", "FundTeamMember");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundTeamMember>("Malldub.Data.FK_FundTeamMember_Fund", "FundTeamMember", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundComment_Fund", "FundComment")]
        public EntityCollection<FundComment> FundCommentList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundComment>("Malldub.Data.FK_FundComment_Fund", "FundComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundComment>("Malldub.Data.FK_FundComment_Fund", "FundComment", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FundDefault", "Default")]
        public EntityCollection<Default> DefaultList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Default>("Malldub.Data.FundDefault", "Default");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Default>("Malldub.Data.FundDefault", "Default", value);
                }
            }
        }

        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Malldub.Data", "FK_FundUser_FundUserFund", "FundUser")]
        public EntityCollection<FundUser> UserFundFundUserList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundUser>("Malldub.Data.FK_FundUser_FundUserFund", "FundUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundUser>("Malldub.Data.FK_FundUser_FundUserFund", "FundUser", value);
                }
            }
        }

        #endregion
    }
}
#pragma warning restore 1591