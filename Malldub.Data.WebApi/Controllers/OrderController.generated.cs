#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using CodeSmith.Data.Linq;
using CodeSmith.Data.Linq.Dynamic;
using Malldub.Data;

namespace Malldub.Data.Controllers.API
{
    [CodeSmith.Data.Web.Http.PagingAndFiltering]
    public partial class OrderController : ApiController
    {
        private Malldub.Data.MalldubDataContext _context = new Malldub.Data.MalldubDataContext();

        #region Get

        public Malldub.Data.Order GetByKey(System.Int32 identification)
        {
            var order = _context.Order.GetByKey(identification);
            if (order == null)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.NotFound));

            return order;
        }

        public IQueryable<Malldub.Data.Order> GetAll()
        {
            return _context.Order.AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByGuid(System.Guid guid)
        {
            return _context.Order.ByGuid(guid).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCustomerId(System.String customerId)
        {
            return _context.Order.ByCustomerId(customerId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByBillingAddressId(System.Int32 billingAddressId)
        {
            return _context.Order.ByBillingAddressId(billingAddressId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByShippingAddressId(System.Int32? shippingAddressId)
        {
            return _context.Order.ByShippingAddressId(shippingAddressId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByStatusId(System.String statusId)
        {
            return _context.Order.ByStatusId(statusId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByPaymentStatusId(System.String paymentStatusId)
        {
            return _context.Order.ByPaymentStatusId(paymentStatusId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByPaymentMethodSystemName(System.String paymentMethodSystemName)
        {
            return _context.Order.ByPaymentMethodSystemName(paymentMethodSystemName).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCardType(System.String cardType)
        {
            return _context.Order.ByCardType(cardType).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCardName(System.String cardName)
        {
            return _context.Order.ByCardName(cardName).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCardNumber(System.String cardNumber)
        {
            return _context.Order.ByCardNumber(cardNumber).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByMaskedCreditCardNumber(System.String maskedCreditCardNumber)
        {
            return _context.Order.ByMaskedCreditCardNumber(maskedCreditCardNumber).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCardCvv2(System.String cardCvv2)
        {
            return _context.Order.ByCardCvv2(cardCvv2).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCardExpirationMonth(System.String cardExpirationMonth)
        {
            return _context.Order.ByCardExpirationMonth(cardExpirationMonth).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCardExpirationYear(System.String cardExpirationYear)
        {
            return _context.Order.ByCardExpirationYear(cardExpirationYear).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByAuthorizationTransactionId(System.String authorizationTransactionId)
        {
            return _context.Order.ByAuthorizationTransactionId(authorizationTransactionId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByAuthorizationTransactionCode(System.String authorizationTransactionCode)
        {
            return _context.Order.ByAuthorizationTransactionCode(authorizationTransactionCode).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByAuthorizationTransactionResult(System.String authorizationTransactionResult)
        {
            return _context.Order.ByAuthorizationTransactionResult(authorizationTransactionResult).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCaptureTransactionId(System.String captureTransactionId)
        {
            return _context.Order.ByCaptureTransactionId(captureTransactionId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByCaptureTransactionResult(System.String captureTransactionResult)
        {
            return _context.Order.ByCaptureTransactionResult(captureTransactionResult).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetBySubscriptionTransactionId(System.String subscriptionTransactionId)
        {
            return _context.Order.BySubscriptionTransactionId(subscriptionTransactionId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByPurchaseOrderNumber(System.String purchaseOrderNumber)
        {
            return _context.Order.ByPurchaseOrderNumber(purchaseOrderNumber).AsQueryable();
        }

        public IQueryable<Malldub.Data.Order> GetByDateEntered(System.DateTime dateEntered)
        {
            return _context.Order.ByDateEntered(dateEntered).AsQueryable();
        }

        #endregion

        public HttpResponseMessage Post(Malldub.Data.Order value)
        {
            if (!ModelState.IsValid)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.BadRequest));

            _context.Order.AddObject(value);
            _context.SaveChanges();

            var response = Request.CreateResponse<Malldub.Data.Order>(HttpStatusCode.Created, value);
            response.Headers.Location = new Uri( Url.Link("DefaultApi", new { Identification = value.Identification }));

            return response;
        }

        public HttpResponseMessage Put(Malldub.Data.Order value)
        {
            if (!ModelState.IsValid)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.BadRequest));

            var order = _context.Order.GetByKey(value.Identification);
            if (order == null)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.NotFound));

            _context.ApplyCurrentValues(order.EntityKey.EntitySetName, value);
            _context.SaveChanges();

            return new HttpResponseMessage(HttpStatusCode.OK);
        }

        public HttpResponseMessage Delete(System.Int32 identification)
        {
            var order = _context.Order.GetByKey(identification);
            if (order == null)
                return new HttpResponseMessage(HttpStatusCode.NotFound);

            _context.Order.DeleteObject(order);
            _context.SaveChanges();
            
            return new HttpResponseMessage(HttpStatusCode.OK);
        }
    }
}
