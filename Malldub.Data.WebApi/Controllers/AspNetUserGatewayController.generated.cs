#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using CodeSmith.Data.Linq;
using CodeSmith.Data.Linq.Dynamic;
using Malldub.Data;

namespace Malldub.Data.Controllers.API
{
    using Malldub.WebApi.RootControllers;

    [CodeSmith.Data.Web.Http.PagingAndFiltering]
    public partial class AspNetUserGatewayController : BaseApiController
    {
        private Malldub.Data.MalldubDataContext _context = new Malldub.Data.MalldubDataContext();

        #region Get

        public Malldub.Data.AspNetUserGateway GetByKey(System.Int32 identification)
        {
            AccessLevel("Administrator", "Admin");
            var aspNetUserGateway = _context.AspNetUserGateway.GetByKey(identification);
            if (aspNetUserGateway == null)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.NotFound));

            return aspNetUserGateway;
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetAll()
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByGatewayId(System.String gatewayId)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByGatewayId(gatewayId).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByAspNetUserId(System.String aspNetUserId)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByAspNetUserId(aspNetUserId).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByGatewayUserId(System.String gatewayUserId)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByGatewayUserId(gatewayUserId).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByFirstName(System.String firstName)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByFirstName(firstName).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByLastName(System.String lastName)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByLastName(lastName).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByEmail(System.String email)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByEmail(email).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByAccessToken(System.String accessToken)
        {
            return _context.AspNetUserGateway.ByAccessToken(accessToken).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByTokenType(System.String tokenType)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByTokenType(tokenType).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByTokenExpiration(System.String tokenExpiration)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByTokenExpiration(tokenExpiration).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByDateEntered(System.DateTime dateEntered)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByDateEntered(dateEntered).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByDateUpdated(System.DateTime dateUpdated)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByDateUpdated(dateUpdated).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByAccountId(System.String accountId)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByAccountId(accountId).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByAccountReferenceId(System.String accountReferenceId)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByAccountReferenceId(accountReferenceId).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByUserState(System.String userState)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByUserState(userState).AsQueryable();
        }

        public IQueryable<Malldub.Data.AspNetUserGateway> GetByAccountState(System.String accountState)
        {
            AccessLevel("Administrator", "Admin");
            return _context.AspNetUserGateway.ByAccountState(accountState).AsQueryable();
        }

        #endregion

        public HttpResponseMessage Post(Malldub.Data.AspNetUserGateway value)
        {
            AccessLevel("Administrator", "Admin");
            if (!ModelState.IsValid)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.BadRequest));

            _context.AspNetUserGateway.AddObject(value);
            _context.SaveChanges();

            var response = Request.CreateResponse<Malldub.Data.AspNetUserGateway>(HttpStatusCode.Created, value);
            response.Headers.Location = new Uri( Url.Link("DefaultApi", new { Identification = value.Identification }));

            return response;
        }

        public HttpResponseMessage Put(Malldub.Data.AspNetUserGateway value)
        {
            AccessLevel("Administrator", "Admin");
            if (!ModelState.IsValid)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.BadRequest));

            var aspNetUserGateway = _context.AspNetUserGateway.GetByKey(value.Identification);
            if (aspNetUserGateway == null)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.NotFound));

            _context.ApplyCurrentValues(aspNetUserGateway.EntityKey.EntitySetName, value);
            _context.SaveChanges();

            return new HttpResponseMessage(HttpStatusCode.OK);
        }

        public HttpResponseMessage Delete(System.Int32 identification)
        {
            AccessLevel("Administrator", "Admin");
            var aspNetUserGateway = _context.AspNetUserGateway.GetByKey(identification);
            if (aspNetUserGateway == null)
                return new HttpResponseMessage(HttpStatusCode.NotFound);

            _context.AspNetUserGateway.DeleteObject(aspNetUserGateway);
            _context.SaveChanges();
            
            return new HttpResponseMessage(HttpStatusCode.OK);
        }
    }
}
