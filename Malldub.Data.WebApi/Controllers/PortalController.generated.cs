#pragma warning disable 1591
// <auto-generated>
//     This code was generated from a CodeSmith Generator template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using CodeSmith.Data.Linq;
using CodeSmith.Data.Linq.Dynamic;
using Malldub.Data;

namespace Malldub.Data.Controllers.API
{
    [CodeSmith.Data.Web.Http.PagingAndFiltering]
    public partial class PortalController : ApiController
    {
        private Malldub.Data.MalldubDataContext _context = new Malldub.Data.MalldubDataContext();

        #region Get

        public Malldub.Data.Portal GetByKey(System.Int32 identification)
        {
            var portal = _context.Portal.GetByKey(identification);
            if (portal == null)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.NotFound));

            return portal;
        }

        public IQueryable<Malldub.Data.Portal> GetAll()
        {
            return _context.Portal.AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByMallId(System.String mallId)
        {
            return _context.Portal.ByMallId(mallId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByStatusId(System.String statusId)
        {
            return _context.Portal.ByStatusId(statusId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByTypeId(System.String typeId)
        {
            return _context.Portal.ByTypeId(typeId).AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByName(System.String name)
        {
            return _context.Portal.ByName(name).AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByContainerName(System.String containerName)
        {
            return _context.Portal.ByContainerName(containerName).AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByTitle(System.String title)
        {
            return _context.Portal.ByTitle(title).AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByKeywords(System.String keywords)
        {
            return _context.Portal.ByKeywords(keywords).AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByDateEntered(System.DateTime? dateEntered)
        {
            return _context.Portal.ByDateEntered(dateEntered).AsQueryable();
        }

        public IQueryable<Malldub.Data.Portal> GetByDateUpdated(System.DateTime? dateUpdated)
        {
            return _context.Portal.ByDateUpdated(dateUpdated).AsQueryable();
        }

        #endregion

        public HttpResponseMessage Post(Malldub.Data.Portal value)
        {
            if (!ModelState.IsValid)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.BadRequest));

            _context.Portal.AddObject(value);
            _context.SaveChanges();

            var response = Request.CreateResponse<Malldub.Data.Portal>(HttpStatusCode.Created, value);
            response.Headers.Location = new Uri( Url.Link("DefaultApi", new { Identification = value.Identification }));

            return response;
        }

        public HttpResponseMessage Put(Malldub.Data.Portal value)
        {
            if (!ModelState.IsValid)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.BadRequest));

            var portal = _context.Portal.GetByKey(value.Identification);
            if (portal == null)
                throw new HttpResponseException(new HttpResponseMessage(HttpStatusCode.NotFound));

            _context.ApplyCurrentValues(portal.EntityKey.EntitySetName, value);
            _context.SaveChanges();

            return new HttpResponseMessage(HttpStatusCode.OK);
        }

        public HttpResponseMessage Delete(System.Int32 identification)
        {
            var portal = _context.Portal.GetByKey(identification);
            if (portal == null)
                return new HttpResponseMessage(HttpStatusCode.NotFound);

            _context.Portal.DeleteObject(portal);
            _context.SaveChanges();
            
            return new HttpResponseMessage(HttpStatusCode.OK);
        }
    }
}
